package org.hinton_lang.Tokens;

public enum TokenType {
    // Operators
    ARITHMETIC_PLUS,
    ARITHMETIC_MINUS,
    ARITHMETIC_MULT,
    ARITHMETIC_DIVISION,
    ARITHMETIC_EXPONENT,
    ARITHMETIC_MODULUS,
    LOGICAL_GREATER_THAN,
    LOGICAL_GREATER_THAN_EQUALS,
    LOGICAL_LESS_THAN,
    LOGICAL_LESS_THAN_EQUALS,
    EQUALS_SIGN,
    LOGICAL_NOT,
    LOGICAL_AND,
    LOGICAL_OR,
    LOGICAL_EQUALS,
    LOGICAL_NOT_EQUALS,
    LOGICAL_IS,
    BITWISE_SHIFT_LEFT,
    BITWISE_SHIFT_RIGHT,
    BITWISE_AND,
    BITWISE_OR,
    BITWISE_NOT,
    BITWISE_XOR,
    RANGE_OPERATOR,

    // Keywords and Identifiers
    LET_KEYWORD,
    FUNC_KEYWORD,
    CONST_KEYWORD,
    IF_KEYWORD,
    ELIF_KEYWORD,
    ELSE_KEYWORD,

    CUSTOM_IDENTIFIER,

    // Types
    INTEGER_TYPE,
    NINTEGER_TYPE,
    REAL_TYPE,
    NREAL_TYPE,
    STRING_TYPE,
    NSTRING_TYPE,
    CHARACTER_TYPE,
    NCHARACTER_TYPE,
    BOOLEAN_TYPE,
    NBOOLEAN_TYPE,
    DICTIONARY_TYPE,
    NDICTIONARY_TYPE,
    SET_TYPE,
    NSET_TYPE,
    FUNCTION_TYPE,
    NFUNCTION_TYPE,
    VOID_TYPE,
    ANY_TYPE,
    NONE_TYPE,

    // Separators and Delimiters
    OPEN_PARENTHESIS,
    CLOSE_PARENTHESIS,
    OPEN_CURLY_BRACES,
    CLOSE_CURLY_BRACES,
    COLON_SEPARATOR,
    SEMICOLON_SEPARATOR,
    COMMA_SEPARATOR,
    OPEN_SQUARE_BRAKET,
    CLOSE_SQUARE_BRAKET,
    DOT_SEPARATOR,

    // Value Literals
    NONE_LITERAL,
    BOOLEAN_LITERAL_TRUE,
    BOOLEAN_LITERAL_FALSE,
    STRING_LITERAL,
    INTEGER_LITERAL,
    REAL_LITERAL,

    // Others
    BAD_CHARACTER,
    LINE_COMMENT,
    INLINE_COMMENT,
    BLOCK_COMMENT,
    WHITESPACE,
    PASS_STATEMENT,
    END_OF_FILE
}
